# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ccline/ccline.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13\x63\x63line/ccline.proto\x12\x06\x63\x63line\"\x0e\n\x0cGooseRequest\")\n\nGooseReply\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0f\n\x07message\x18\x02 \x01(\t\"y\n\rRecordRequest\x12*\n\x10start_sensor_ids\x18\x01 \x03(\x0e\x32\x10.ccline.SensorId\x12)\n\x0fstop_sensor_ids\x18\x02 \x03(\x0e\x32\x10.ccline.SensorId\x12\x11\n\tdata_path\x18\x03 \x01(\t\"\r\n\x0bRecordReply\"9\n\x11LiveSampleRequest\x12$\n\nsensor_ids\x18\x01 \x03(\x0e\x32\x10.ccline.SensorId\" \n\x0fLiveSampleReply\x12\r\n\x05image\x18\x01 \x01(\x0c\"\x11\n\x0fShutdownRequest\"\x0f\n\rShutdownReply\"E\n\x16StartCollectingRequest\x12\x14\n\x0crecording_id\x18\x01 \x01(\t\x12\x15\n\rrecording_tag\x18\x02 \x03(\t\"\xa4\x01\n\x14StartCollectingReply\x12\x42\n\x06result\x18\x01 \x01(\x0e\x32\x32.ccline.StartCollectingReply.StartCollectingResult\x12\x0f\n\x07message\x18\x02 \x01(\t\"7\n\x15StartCollectingResult\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x06\n\x02OK\x10\x01\x12\t\n\x05\x45RROR\x10\x02\"\x18\n\x16StopAllCollectsRequest\"\x16\n\x14StopAllCollectsReply\"\x18\n\x16ShutdownClusterRequest\"\x96\x01\n\x14ShutdownClusterReply\x12;\n\x06result\x18\x01 \x01(\x0e\x32+.ccline.ShutdownClusterReply.ShutdownResult\x12\x0f\n\x07message\x18\x02 \x01(\t\"0\n\x0eShutdownResult\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x06\n\x02OK\x10\x01\x12\t\n\x05\x45RROR\x10\x02*|\n\x08SensorId\x12\x14\n\x10UNKNOWN_SensorId\x10\x00\x12\x0b\n\x07\x43\x61mera1\x10\x01\x12\x0b\n\x07\x43\x61mera2\x10\x02\x12\x0b\n\x07\x43\x61mera3\x10\x03\x12\x0b\n\x07\x43\x61mera4\x10\x04\x12\x08\n\x04Imu1\x10\x05\x12\x08\n\x04Imu2\x10\x06\x12\x08\n\x04Imu3\x10\x07\x12\x08\n\x04Imu4\x10\x08\x32\xf5\x01\n\x04Node\x12\x33\n\x05Goose\x12\x14.ccline.GooseRequest\x1a\x12.ccline.GooseReply\"\x00\x12\x36\n\x06Record\x12\x15.ccline.RecordRequest\x1a\x13.ccline.RecordReply\"\x00\x12\x42\n\nLiveSample\x12\x19.ccline.LiveSampleRequest\x1a\x17.ccline.LiveSampleReply\"\x00\x12<\n\x08Shutdown\x12\x17.ccline.ShutdownRequest\x1a\x15.ccline.ShutdownReply\"\x00\x32\x86\x02\n\x0b\x43oordinator\x12Q\n\x0fStartCollecting\x12\x1e.ccline.StartCollectingRequest\x1a\x1c.ccline.StartCollectingReply\"\x00\x12Q\n\x0fStopAllCollects\x12\x1e.ccline.StopAllCollectsRequest\x1a\x1c.ccline.StopAllCollectsReply\"\x00\x12Q\n\x0fShutdownCluster\x12\x1e.ccline.ShutdownClusterRequest\x1a\x1c.ccline.ShutdownClusterReply\"\x00\x62\x06proto3')

_SENSORID = DESCRIPTOR.enum_types_by_name['SensorId']
SensorId = enum_type_wrapper.EnumTypeWrapper(_SENSORID)
UNKNOWN_SensorId = 0
Camera1 = 1
Camera2 = 2
Camera3 = 3
Camera4 = 4
Imu1 = 5
Imu2 = 6
Imu3 = 7
Imu4 = 8


_GOOSEREQUEST = DESCRIPTOR.message_types_by_name['GooseRequest']
_GOOSEREPLY = DESCRIPTOR.message_types_by_name['GooseReply']
_RECORDREQUEST = DESCRIPTOR.message_types_by_name['RecordRequest']
_RECORDREPLY = DESCRIPTOR.message_types_by_name['RecordReply']
_LIVESAMPLEREQUEST = DESCRIPTOR.message_types_by_name['LiveSampleRequest']
_LIVESAMPLEREPLY = DESCRIPTOR.message_types_by_name['LiveSampleReply']
_SHUTDOWNREQUEST = DESCRIPTOR.message_types_by_name['ShutdownRequest']
_SHUTDOWNREPLY = DESCRIPTOR.message_types_by_name['ShutdownReply']
_STARTCOLLECTINGREQUEST = DESCRIPTOR.message_types_by_name['StartCollectingRequest']
_STARTCOLLECTINGREPLY = DESCRIPTOR.message_types_by_name['StartCollectingReply']
_STOPALLCOLLECTSREQUEST = DESCRIPTOR.message_types_by_name['StopAllCollectsRequest']
_STOPALLCOLLECTSREPLY = DESCRIPTOR.message_types_by_name['StopAllCollectsReply']
_SHUTDOWNCLUSTERREQUEST = DESCRIPTOR.message_types_by_name['ShutdownClusterRequest']
_SHUTDOWNCLUSTERREPLY = DESCRIPTOR.message_types_by_name['ShutdownClusterReply']
_STARTCOLLECTINGREPLY_STARTCOLLECTINGRESULT = _STARTCOLLECTINGREPLY.enum_types_by_name['StartCollectingResult']
_SHUTDOWNCLUSTERREPLY_SHUTDOWNRESULT = _SHUTDOWNCLUSTERREPLY.enum_types_by_name['ShutdownResult']
GooseRequest = _reflection.GeneratedProtocolMessageType('GooseRequest', (_message.Message,), {
  'DESCRIPTOR' : _GOOSEREQUEST,
  '__module__' : 'ccline.ccline_pb2'
  # @@protoc_insertion_point(class_scope:ccline.GooseRequest)
  })
_sym_db.RegisterMessage(GooseRequest)

GooseReply = _reflection.GeneratedProtocolMessageType('GooseReply', (_message.Message,), {
  'DESCRIPTOR' : _GOOSEREPLY,
  '__module__' : 'ccline.ccline_pb2'
  # @@protoc_insertion_point(class_scope:ccline.GooseReply)
  })
_sym_db.RegisterMessage(GooseReply)

RecordRequest = _reflection.GeneratedProtocolMessageType('RecordRequest', (_message.Message,), {
  'DESCRIPTOR' : _RECORDREQUEST,
  '__module__' : 'ccline.ccline_pb2'
  # @@protoc_insertion_point(class_scope:ccline.RecordRequest)
  })
_sym_db.RegisterMessage(RecordRequest)

RecordReply = _reflection.GeneratedProtocolMessageType('RecordReply', (_message.Message,), {
  'DESCRIPTOR' : _RECORDREPLY,
  '__module__' : 'ccline.ccline_pb2'
  # @@protoc_insertion_point(class_scope:ccline.RecordReply)
  })
_sym_db.RegisterMessage(RecordReply)

LiveSampleRequest = _reflection.GeneratedProtocolMessageType('LiveSampleRequest', (_message.Message,), {
  'DESCRIPTOR' : _LIVESAMPLEREQUEST,
  '__module__' : 'ccline.ccline_pb2'
  # @@protoc_insertion_point(class_scope:ccline.LiveSampleRequest)
  })
_sym_db.RegisterMessage(LiveSampleRequest)

LiveSampleReply = _reflection.GeneratedProtocolMessageType('LiveSampleReply', (_message.Message,), {
  'DESCRIPTOR' : _LIVESAMPLEREPLY,
  '__module__' : 'ccline.ccline_pb2'
  # @@protoc_insertion_point(class_scope:ccline.LiveSampleReply)
  })
_sym_db.RegisterMessage(LiveSampleReply)

ShutdownRequest = _reflection.GeneratedProtocolMessageType('ShutdownRequest', (_message.Message,), {
  'DESCRIPTOR' : _SHUTDOWNREQUEST,
  '__module__' : 'ccline.ccline_pb2'
  # @@protoc_insertion_point(class_scope:ccline.ShutdownRequest)
  })
_sym_db.RegisterMessage(ShutdownRequest)

ShutdownReply = _reflection.GeneratedProtocolMessageType('ShutdownReply', (_message.Message,), {
  'DESCRIPTOR' : _SHUTDOWNREPLY,
  '__module__' : 'ccline.ccline_pb2'
  # @@protoc_insertion_point(class_scope:ccline.ShutdownReply)
  })
_sym_db.RegisterMessage(ShutdownReply)

StartCollectingRequest = _reflection.GeneratedProtocolMessageType('StartCollectingRequest', (_message.Message,), {
  'DESCRIPTOR' : _STARTCOLLECTINGREQUEST,
  '__module__' : 'ccline.ccline_pb2'
  # @@protoc_insertion_point(class_scope:ccline.StartCollectingRequest)
  })
_sym_db.RegisterMessage(StartCollectingRequest)

StartCollectingReply = _reflection.GeneratedProtocolMessageType('StartCollectingReply', (_message.Message,), {
  'DESCRIPTOR' : _STARTCOLLECTINGREPLY,
  '__module__' : 'ccline.ccline_pb2'
  # @@protoc_insertion_point(class_scope:ccline.StartCollectingReply)
  })
_sym_db.RegisterMessage(StartCollectingReply)

StopAllCollectsRequest = _reflection.GeneratedProtocolMessageType('StopAllCollectsRequest', (_message.Message,), {
  'DESCRIPTOR' : _STOPALLCOLLECTSREQUEST,
  '__module__' : 'ccline.ccline_pb2'
  # @@protoc_insertion_point(class_scope:ccline.StopAllCollectsRequest)
  })
_sym_db.RegisterMessage(StopAllCollectsRequest)

StopAllCollectsReply = _reflection.GeneratedProtocolMessageType('StopAllCollectsReply', (_message.Message,), {
  'DESCRIPTOR' : _STOPALLCOLLECTSREPLY,
  '__module__' : 'ccline.ccline_pb2'
  # @@protoc_insertion_point(class_scope:ccline.StopAllCollectsReply)
  })
_sym_db.RegisterMessage(StopAllCollectsReply)

ShutdownClusterRequest = _reflection.GeneratedProtocolMessageType('ShutdownClusterRequest', (_message.Message,), {
  'DESCRIPTOR' : _SHUTDOWNCLUSTERREQUEST,
  '__module__' : 'ccline.ccline_pb2'
  # @@protoc_insertion_point(class_scope:ccline.ShutdownClusterRequest)
  })
_sym_db.RegisterMessage(ShutdownClusterRequest)

ShutdownClusterReply = _reflection.GeneratedProtocolMessageType('ShutdownClusterReply', (_message.Message,), {
  'DESCRIPTOR' : _SHUTDOWNCLUSTERREPLY,
  '__module__' : 'ccline.ccline_pb2'
  # @@protoc_insertion_point(class_scope:ccline.ShutdownClusterReply)
  })
_sym_db.RegisterMessage(ShutdownClusterReply)

_NODE = DESCRIPTOR.services_by_name['Node']
_COORDINATOR = DESCRIPTOR.services_by_name['Coordinator']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _SENSORID._serialized_start=824
  _SENSORID._serialized_end=948
  _GOOSEREQUEST._serialized_start=31
  _GOOSEREQUEST._serialized_end=45
  _GOOSEREPLY._serialized_start=47
  _GOOSEREPLY._serialized_end=88
  _RECORDREQUEST._serialized_start=90
  _RECORDREQUEST._serialized_end=211
  _RECORDREPLY._serialized_start=213
  _RECORDREPLY._serialized_end=226
  _LIVESAMPLEREQUEST._serialized_start=228
  _LIVESAMPLEREQUEST._serialized_end=285
  _LIVESAMPLEREPLY._serialized_start=287
  _LIVESAMPLEREPLY._serialized_end=319
  _SHUTDOWNREQUEST._serialized_start=321
  _SHUTDOWNREQUEST._serialized_end=338
  _SHUTDOWNREPLY._serialized_start=340
  _SHUTDOWNREPLY._serialized_end=355
  _STARTCOLLECTINGREQUEST._serialized_start=357
  _STARTCOLLECTINGREQUEST._serialized_end=426
  _STARTCOLLECTINGREPLY._serialized_start=429
  _STARTCOLLECTINGREPLY._serialized_end=593
  _STARTCOLLECTINGREPLY_STARTCOLLECTINGRESULT._serialized_start=538
  _STARTCOLLECTINGREPLY_STARTCOLLECTINGRESULT._serialized_end=593
  _STOPALLCOLLECTSREQUEST._serialized_start=595
  _STOPALLCOLLECTSREQUEST._serialized_end=619
  _STOPALLCOLLECTSREPLY._serialized_start=621
  _STOPALLCOLLECTSREPLY._serialized_end=643
  _SHUTDOWNCLUSTERREQUEST._serialized_start=645
  _SHUTDOWNCLUSTERREQUEST._serialized_end=669
  _SHUTDOWNCLUSTERREPLY._serialized_start=672
  _SHUTDOWNCLUSTERREPLY._serialized_end=822
  _SHUTDOWNCLUSTERREPLY_SHUTDOWNRESULT._serialized_start=774
  _SHUTDOWNCLUSTERREPLY_SHUTDOWNRESULT._serialized_end=822
  _NODE._serialized_start=951
  _NODE._serialized_end=1196
  _COORDINATOR._serialized_start=1199
  _COORDINATOR._serialized_end=1461
# @@protoc_insertion_point(module_scope)
